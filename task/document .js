// Users collection
db.createCollection("users");

//Documents creation
db.users.insertMany([
  {
    id: 1,
    name: "AAA",
    age: 20,
    email: "aa@gmail.com",
    contact: 0987654324,
    mentorId: 2,
    placement: true,
    codekataProbs: 10,
    problemSolving: true,
    attendenceId: 1,
    taskSubmission: true,
  },
  {
    id: 2,
    name: "BBB",
    age: 25,
    email: "bb@gmail.com",
    contact: 5609372856,
    mentorId: 2,
    placement: false,
    codekataProbs: 50,
    problemSolving: true,
    attendenceId: 2,
    taskSubmission: false,
  },
  {
    id: 3,
    name: "CCC",
    age: 24,
    email: "cc@gmail.com",
    contact: 6546547994,
    mentorId: 2,
    placement: true,
    codekataProbs: 20,
    problemSolving: true,
    attendenceId: 2,
    taskSubmission: false,
  },
  {
    id: 4,
    name: "DDD",
    age: 34,
    email: "dd@gmail.com",
    contact: 8964693987,
    mentorId: 2,
    placement: true,
    codekataProbs: 30,
    problemSolving: false,
    attendenceId: 2,
    taskSubmission: false,
  },
  {
    id: 5,
    name: "EEE",
    age: 26,
    email: "ee@gmail.com",
    contact: 7387564350,
    mentorId: 3,
    placement: true,
    codekataProbs: 90,
    problemSolving: false,
    attendenceId: 1,
    taskSubmission: false,
  },
  {
    id: 6,
    name: "FFF",
    age: 30,
    email: "ff@gmail.com",
    contact: 8284667647,
    mentorId: 4,
    placement: false,
    codekataProbs: 40,
    problemSolving: false,
    attendenceId: 1,
    taskSubmission: false,
  },
  {
    id: 7,
    name: "GGG",
    age: 28,
    email: "gg@gmail.com",
    contact: 4380365683,
    mentorId: 5,
    placement: true,
    codekataProbs: 80,
    problemSolving: true,
    attendenceId: 2,
    taskSubmission: true,
  },
  {
    id: 8,
    name: "HHH",
    age: 35,
    email: "hh@gmail.com",
    contact: 9328758974,
    mentorId: 3,
    placement: true,
    codekataProbs: 70,
    problemSolving: true,
    attendenceId: 2,
    taskSubmission: true,
  },
  {
    id: 9,
    name: "III",
    age: 32,
    email: "ii@gmail.com",
    contact: 0928374623,
    mentorId: 2,
    placement: false,
    codekataProbs: 60,
    problemSolving: false,
    attendenceId: 1,
    taskSubmission: true,
  },
  {
    id: 10,
    name: "JJJ",
    age: 21,
    email: "jj@gmail.com",
    contact: 2345678987,
    mentorId: 2,
    placement: false,
    codekataProbs: 120,
    problemSolving: true,
    attendenceId: 2,
    taskSubmission: true,
  },
  {
    id: 11,
    name: "KKK",
    age: 23,
    email: "kk@gmail.com",
    contact: 2324897485,
    mentorId: 3,
    placement: true,
    codekataProbs: 150,
    problemSolving: true,
    attendenceId: 1,
    taskSubmission: true,
  },
  {
    id: 12,
    name: "LLL",
    age: 20,
    email: "ll@gmail.com",
    contact: 9876543345,
    mentorId: 4,
    placement: true,
    codekataProbs: 200,
    problemSolving: true,
    attendenceId: 2,
    taskSubmission: true,
  },
  {
    id: 13,
    name: "MMM",
    age: 27,
    email: "mm@gmail.com",
    contact: 7654345679,
    mentorId: 5,
    placement: false,
    codekataProbs: 130,
    problemSolving: true,
    attendenceId: 1,
    taskSubmission: false,
  },
  {
    id: 14,
    name: "NNN",
    age: 26,
    email: "nn@gmail.com",
    contact: 9837463765,
    mentorId: 2,
    placement: true,
    codekataProbs: 160,
    problemSolving: false,
    attendenceId: 1,
    taskSubmission: false,
  },
  {
    id: 15,
    name: "OOO",
    age: 20,
    email: "oo@gmail.com",
    contact: 3894258490,
    mentorId: 4,
    placement: true,
    codekataProbs: 100,
    problemSolving: true,
    attendenceId: 1,
    taskSubmission: false,
  },
  {
    id: 16,
    name: "PPP",
    age: 33,
    email: "pp@gmail.com",
    contact: 9832746535,
    mentorId: 2,
    placement: false,
    codekataProbs: 210,
    problemSolving: true,
    attendenceId: 2,
    taskSubmission: false,
  },
  {
    id: 17,
    name: "QQQ",
    age: 29,
    email: "qq@gmail.com",
    contact: 3948937565,
    mentorId: 2,
    placement: true,
    codekataProbs: 300,
    problemSolving: true,
    attendenceId: 2,
    taskSubmission: false,
  },
  {
    id: 18,
    name: "RRR",
    age: 34,
    email: "rr@gmail.com",
    contact: 7863526586,
    mentorId: 1,
    placement: false,
    codekataProbs: 110,
    problemSolving: true,
    attendenceId: 2,
    taskSubmission: true,
  },
  {
    id: 19,
    name: "SSS",
    age: 35,
    email: "ss@gmail.com",
    contact: 9876874390,
    mentorId: 2,
    placement: true,
    codekataProbs: 170,
    problemSolving: true,
    attendenceId: 2,
    taskSubmission: true,
  },
  {
    id: 20,
    name: "TTT",
    age: 27,
    email: "tt@gmail.com",
    contact: 5428552656,
    mentorId: 2,
    placement: true,
    codekataProbs: 180,
    problemSolving: true,
    attendenceId: 1,
    taskSubmission: false,
  },
  {
    id: 21,
    name: "UUU",
    age: 24,
    email: "uu@gmail.com",
    contact: 2904788355,
    mentorId: 5,
    placement: false,
    codekataProbs: 140,
    problemSolving: true,
    attendenceId: 1,
    taskSubmission: true,
  },
  {
    id: 22,
    name: "VVV",
    age: 20,
    email: "vv@gmail.com",
    contact: 3834778748,
    mentorId: 2,
    placement: true,
    codekataProbs: 230,
    problemSolving: true,
    attendenceId: 2,
    taskSubmission: true,
  },
  {
    id: 23,
    name: "WWW",
    age: 34,
    email: "ww@gmail.com",
    contact: 4735678654,
    mentorId: 3,
    placement: true,
    codekataProbs: 190,
    problemSolving: true,
    attendenceId: 1,
    taskSubmission: false,
  },
  {
    id: 24,
    name: "XXX",
    age: 34,
    email: "xx@gmail.com",
    contact: 8746856368,
    mentorId: 2,
    placement: true,
    codekataProbs: 290,
    problemSolving: true,
    attendenceId: 1,
    taskSubmission: false,
  },
  {
    id: 25,
    name: "YYY",
    age: 29,
    email: "yy@gmail.com",
    contact: 7868659896,
    mentorId: 3,
    placement: true,
    codekataProbs: 220,
    problemSolving: true,
    attendenceId: 1,
    taskSubmission: true,
  },
  {
    id: 26,
    name: "ZZZ",
    age: 31,
    email: "zz@gmail.com",
    contact: 3876843477,
    mentorId: 2,
    placement: true,
    codekataProbs: 260,
    problemSolving: true,
    attendenceId: 1,
    taskSubmission: false,
  },
  {
    id: 27,
    name: "JGB",
    age: 24,
    email: "jgb@gmail.com",
    contact: 3790475993,
    mentorId: 1,
    placement: true,
    codekataProbs: 240,
    problemSolving: true,
    attendenceId: 1,
    taskSubmission: true,
  },
  {
    id: 28,
    name: "IHD",
    age: 32,
    email: "ihd@gmail.com",
    contact: 7687598471,
    mentorId: 2,
    placement: true,
    codekataProbs: 280,
    problemSolving: true,
    attendenceId: 1,
    taskSubmission: false,
  },
  {
    id: 29,
    name: "KSX",
    age: 35,
    email: "ksx@gmail.com",
    contact: 5478688990,
    mentorId: 2,
    placement: false,
    codekataProbs: 250,
    problemSolving: false,
    attendenceId: 1,
    taskSubmission: false,
  },
  {
    id: 30,
    name: "TUA",
    age: 25,
    email: "tua@gmail.com",
    contact: 8658765974,
    mentorId: 1,
    placement: true,
    codekataProbs: 270,
    problemSolving: false,
    attendenceId: 2,
    taskSubmission: true,
  },
]);

// topics collection

db.createCollection("topics");

// Documents creation

db.topics.insertMany([
  {
    id: 1,
    topicName: "React",
    month: "October",
    userId: 4,
  },
  {
    id: 2,
    topicName: "Node JS",
    month: "November",
    userId: 27,
  },
  {
    id: 3,
    topicName: "React Router",
    Date: "November",
    userId: 1,
  },
  {
    id: 4,
    topicName: "Node Js Intro",
    month: "November",
    userId: 2,
  },
  {
    id: 5,
    topicName: "Javascript",
    month: "October",
    userId: 16,
  },
  {
    id: 6,
    topicName: "React Formik",
    month: "November",
    userId: 3,
  },
  {
    id: 7,
    topicName: "HTML and CSS",
    month: "November",
    userId: 26,
  },
  {
    id: 8,
    topicName: "Javascript Functions",
    month: "October",
    userId: 20,
  },
  {
    id: 9,
    topicName: "MYSQL Intro",
    month: "October",
    userId: 21,
  },
  {
    id: 10,
    topicName: "MongoDB",
    month: "November",
    userId: 10,
  },
  {
    id: 11,
    topicName: "React Components",
    month: "October",
    userId: 18,
  },
  {
    id: 12,
    topicName: "React Context API",
    month: "November",
    userId: 13,
  },
  {
    id: 13,
    topicName: "Javascript Promises",
    month: "October",
    userId: 12,
  },
  {
    id: 14,
    topicName: "Javascript Async and Await",
    month: "November",
    userId: 7,
  },
  {
    id: 15,
    topicName: "React Hooks and States",
    month: "October",
    userId: 17,
  },
  {
    id: 16,
    topicName: "React Hook useRef and useReducer",
    month: "October",
    userId: 25,
  },
  {
    id: 17,
    topicName: "Javascript Async programming",
    month: "October",
    userId: 29,
  },
  {
    id: 18,
    topicName: "React DOM",
    month: "October",
    userId: 28,
  },
  {
    id: 19,
    topicName: "React ES5 vs ES6",
    month: "October",
    userId: 5,
  },
  {
    id: 20,
    topicName: "Javascript Callback Function",
    month: "October",
    userId: 9,
  },
  {
    id: 21,
    topicName: "Node JS and Express JS",
    month: "October",
    userId: 24,
  },
  {
    id: 22,
    topicName: "Node and MongoDB connectivity",
    month: "November",
    userId: 15,
  },
  {
    id: 23,
    topicName: "React Hooks",
    month: "October",
    userId: 8,
  },
  {
    id: 24,
    topicName: "Javascript Browser and Web",
    month: "October",
    userId: 30,
  },
  {
    id: 25,
    topicName: "Javascript Request and Response cycle",
    month: "October",
    userId: 6,
  },
  {
    id: 26,
    topicName: "Javascript Arrays and Objects",
    month: "October",
    userId: 23,
  },
  {
    id: 27,
    topicName: "Oops in Javascript",
    month: "October",
    userId: 22,
  },
  {
    id: 28,
    topicName: "Promise Request Info & Request Init",
    month: "October",
    userId: 14,
  },
  {
    id: 29,
    topicName: "HTML and CSS Responsive Web Design",
    month: "October",
    userId: 19,
  },
  {
    id: 30,
    topicName: "React with CRUD",
    month: "October",
    userId: 11,
  },
]);

//tasks collection

db.createCollection("tasks");

// documents creation

db.tasks.insertMany([
  {
    id: 1,
    taskName: "Node JS and Express JS Task",
    topicId: 21,
    taskSubmission: true,
    date: "18-Oct-2020",
    userId: 24,
  },
  {
    id: 2,
    taskName: "React Hooks Task",
    topicId: 23,
    taskSubmission: false,
    date: "22-Oct-2020",
    userId: 8,
  },
  {
    id: 3,
    taskName: "Javascript Browser and Web task",
    topicId: 24,
    taskSubmission: false,
    date: "16-Oct-2020",
    userId: 30,
  },
  {
    id: 4,
    taskName: "React task",
    topicId: 1,
    taskSubmission: false,
    date: "21-Oct-2020",
    userId: 4,
  },
  {
    id: 5,
    taskName: "Javascript Promises task",
    topicId: 13,
    taskSubmission: false,
    date: "19-Oct-2020",
    userId: 12,
  },
  {
    id: 6,
    taskName: "Node and MongoDB Connectivity task",
    topicId: 22,
    taskSubmission: false,
    date: "11-Oct-2020",
    userId: 15,
  },
  {
    id: 7,
    taskName: "NodeJS Intro task",
    topicId: 4,
    taskSubmission: true,
    date: "22-Oct-2020",
    userId: 2,
  },
  {
    id: 8,
    taskName: "MongoDB task",
    topicId: 10,
    taskSubmission: true,
    date: "17-Oct-2020",
    userId: 10,
  },
  {
    id: 9,
    taskName: "Javascript Arrays and Objects task",
    topicId: 26,
    taskSubmission: true,
    date: "19-Oct-2020",
    userId: 23,
  },
  {
    id: 10,
    taskName: "React Formik task",
    topicId: 6,
    taskSubmission: true,
    date: "29-Oct-2020",
    userId: 3,
  },
  {
    id: 11,
    taskName: "Oops in Javascript task",
    topicId: 27,
    taskSubmission: true,
    date: "31-Oct-2020",
    userId: 22,
  },
  {
    id: 12,
    taskName: "React with CRUD task",
    topicId: 30,
    taskSubmission: true,
    date: "31-Oct-2020",
    userId: 11,
  },
  {
    id: 13,
    taskName: "Promise Request Info and Request Init task",
    topicId: 28,
    taskSubmission: false,
    date: "28-Oct-2020",
    userId: 14,
  },
  {
    id: 14,
    taskName: "HTML and CSS Responsive Web Design task",
    topicId: 29,
    taskSubmission: false,
    date: "25-Oct-2020",
    userId: 19,
  },
  {
    id: 15,
    taskName: "React Hooks and States task",
    topicId: 15,
    taskSubmission: false,
    date: "06-Oct-2020",
    userId: 17,
  },
  {
    id: 16,
    taskName: "HTML and CSS task",
    topicId: 7,
    taskSubmission: false,
    date: "23-Oct-2020",
    userId: 26,
  },
  {
    id: 17,
    taskName: "React Hook useRef and useReducer task",
    topicId: 16,
    taskSubmission: false,
    date: "29-Oct-2020",
    userId: 25,
  },
  {
    id: 18,
    taskName: "Node JS task",
    topicId: 2,
    taskSubmission: true,
    date: "10-Oct-2020",
    userId: 27,
  },
  {
    id: 19,
    taskName: "Javascript task",
    topicId: 5,
    taskSubmission: true,
    date: "27-Oct-2020",
    userId: 16,
  },
  {
    id: 20,
    taskName: "React Components task",
    topicId: 11,
    taskSubmission: false,
    date: "30-Oct-2020",
    userId: 18,
  },
  {
    id: 21,
    taskName: "React ES5 and ES6 task",
    topicId: 19,
    taskSubmission: true,
    date: "24-Oct-2020",
    userId: 5,
  },
  {
    id: 22,
    taskName: "Javascript Functions task",
    topicId: 8,
    taskSubmission: true,
    date: "05-Oct-2020",
    userId: 20,
  },
  {
    id: 23,
    taskName: "Javascript Async and Await task",
    topicId: 14,
    taskSubmission: false,
    date: "09-Oct-2020",
    userId: 7,
  },
  {
    id: 24,
    taskName: "Javascript Request and Response Cycle task",
    topicId: 25,
    taskSubmission: false,
    date: "29-Oct-2020",
    userId: 6,
  },
  {
    id: 25,
    taskName: "React Router task",
    topicId: 3,
    taskSubmission: true,
    date: "20-Oct-2020",
    userId: 1,
  },
  {
    id: 26,
    taskName: "MySQL Intro task",
    topicId: 9,
    taskSubmission: false,
    date: "15-Oct-2020",
    userId: 21,
  },
  {
    id: 27,
    taskName: "React DOM task",
    topicId: 18,
    taskSubmission: true,
    date: "22-Oct-2020",
    userId: 28,
  },
  {
    id: 28,
    taskName: "Javascript Callback Function task",
    topicId: 20,
    taskSubmission: false,
    date: "17-Oct-2020",
    userId: 9,
  },
  {
    id: 29,
    taskName: "React Context API task",
    topicId: 12,
    taskSubmission: false,
    date: "27-Oct-2020",
    userId: 13,
  },
  {
    id: 30,
    taskName: "Javascript Async Programming task",
    topicId: 17,
    taskSubmission: true,
    date: "31-Oct-2020",
    userId: 29,
  },
]);

// company_drives

db.createCollection("company_drives");

// documents creation

db.company_drives.insertMany([
  {
    id: 1,
    companyName: "Google",
    Date: new Date("2020-08-15"),
    userId: 19,
  },
  {
    id: 2,
    companyName: "HCL Tech",
    Date: new Date("2020-08-23"),
    userId: 2,
  },
  {
    id: 3,
    companyName: "Tech Park",
    Date: new Date("2020-08-17"),
    userId: 30,
  },
  {
    id: 4,
    companyName: "Zoho",
    Date: new Date("2020-11-09"),
    userId: 4,
  },
  {
    id: 5,
    companyName: "Tidal Park",
    Date: new Date("2020-08-21"),
    userId: 9,
  },
  {
    id: 6,
    companyName: "Cognizant",
    Date: new Date("2020-08-25"),
    userId: 1,
  },
  {
    id: 7,
    companyName: "Accenture",
    Date: new Date("2020-08-19"),
    userId: 12,
  },
  {
    id: 8,
    companyName: "Google",
    Date: new Date("2020-08-13"),
    userId: 29,
  },
  {
    id: 9,
    companyName: "HCL Tech",
    Date: new Date("2020-11-23"),
    userId: 13,
  },
  {
    id: 10,
    companyName: "Cogizant",
    Date: new Date("2020-11-03"),
    userId: 24,
  },
  {
    id: 11,
    companyName: "Capgemini",
    Date: new Date("2020-08-20"),
    userId: 6,
  },
  {
    id: 12,
    companyName: "BirlaSoft",
    Date: new Date("2020-08-25"),
    userId: 3,
  },
  {
    id: 13,
    companyName: "MindTree",
    Date: new Date("2020-08-04"),
    userId: 28,
  },
  {
    id: 14,
    companyName: "Oracle",
    Date: new Date("2020-08-16"),
    userId: 14,
  },
  {
    id: 15,
    companyName: "Redington",
    Date: new Date("2020-08-31"),
    userId: 27,
  },
  {
    id: 16,
    companyName: "Syntel",
    Date: new Date("2020-08-21"),
    userId: 8,
  },
  {
    id: 17,
    companyName: "Tata Consultancy Services",
    Date: new Date("2020-08-30"),
    userId: 25,
  },
  {
    id: 18,
    companyName: "ThoughtWorks",
    Date: new Date("2020-08-28"),
    userId: 7,
  },
  {
    id: 19,
    companyName: "Verzon Data Services",
    Date: new Date("2020-11-02"),
    userId: 23,
  },
  {
    id: 20,
    companyName: "UST Global",
    Date: new Date("2020-08-24"),
    userId: 5,
  },
  {
    id: 21,
    companyName: "Aspire Systems",
    Date: new Date("2020-08-17"),
    userId: 26,
  },
  {
    id: 22,
    companyName: "Polaris",
    Date: new Date("2020-11-07"),
    userId: 11,
  },
  {
    id: 23,
    companyName: "Aricent",
    Date: new Date("2020-08-24"),
    userId: 22,
  },
  {
    id: 24,
    companyName: "Nokia",
    Date: new Date("2020-08-29"),
    userId: 15,
  },
  {
    id: 25,
    companyName: "Dell",
    Date: new Date("2020-08-04"),
    userId: 20,
  },
  {
    id: 26,
    companyName: "KLA Tencor",
    Date: new Date("2020-08-06"),
    userId: 17,
  },
  {
    id: 27,
    companyName: "HP Enterprise",
    Date: new Date("2020-08-22"),
    userId: 10,
  },
  {
    id: 28,
    companyName: "Infosys",
    Date: new Date("2020-08-14"),
    userId: 16,
  },
  {
    id: 29,
    companyName: "Logica",
    Date: new Date("2020-08-12"),
    userId: 18,
  },
  {
    id: 30,
    companyName: "Hexaware Technologies Private Limited",
    Date: new Date("2020-08-05"),
    userId: 21,
  },
]);

// mentor collection

db.createCollection("mentor");

// documents creation

db.mentor.insertMany([
  {
    id: 1,
    name: "mentor1",
    menteeCount: 3,
  },
  {
    id: 2,
    name: "mentor2",
    menteeCount: 19,
  },
  {
    id: 3,
    name: "mentor3",
    menteeCount: 20,
  },
  {
    id: 4,
    name: "mentor4",
    menteeCount: 15,
  },
  {
    id: 5,
    name: "mentor5",
    menteeCount: 4,
  },
]);

// codekata collection

db.createCollection("codekata");

// documents creation

db.codekata.insertMany([
  {
    id: 1,
    problem: 10,
    description: "Solved by using React router",
    userId: 1,
  },
  {
    id: 2,
    problem: 50,
    description: "Solved by using Node JS",
    userId: 2,
  },
  {
    id: 3,
    problem: 20,
    description: "Solved by using React Formik",
    userId: 3,
  },
  {
    id: 4,
    problem: 30,
    description: "Solved by using React",
    userId: 4,
  },
  {
    id: 5,
    problem: 90,
    description: "Solved by using React ES5 and ES6",
    userId: 5,
  },
  {
    id: 6,
    problem: 40,
    description: "Solved by using React Components",
    userId: 6,
  },
  {
    id: 7,
    problem: 80,
    description: "Solved by using Javascript Async and Await",
    userId: 7,
  },
  {
    id: 8,
    problem: 70,
    description: "Solved by using Mysql Introduction",
    userId: 8,
  },
  {
    id: 9,
    problem: 60,
    description: "Solved by using Javascript Callback Functions",
    userId: 9,
  },
  {
    id: 10,
    problem: 120,
    description: "Solved by using MongoDB",
    userId: 10,
  },
  {
    id: 11,
    problem: 150,
    description: "Solved by using React DOM",
    userId: 11,
  },
  {
    id: 12,
    problem: 200,
    description: "Solved by using Javascript Promises",
    userId: 12,
  },
  {
    id: 13,
    problem: 130,
    description: "Solved by using React Context API",
    userId: 13,
  },
  {
    id: 14,
    problem: 160,
    description: "Solved by using Javascript Async and Await",
    userId: 14,
  },
  {
    id: 15,
    problem: 100,
    description: "Solved by using Javascript Functions",
    userId: 15,
  },
  {
    id: 16,
    problem: 210,
    description: "Solved by using Javascript",
    userId: 16,
  },
  {
    id: 17,
    problem: 300,
    description: "Solved by using React Hooks and States",
    userId: 17,
  },
  {
    id: 18,
    problem: 110,
    description: "Solved by using React Components",
    userId: 18,
  },
  {
    id: 19,
    problem: 170,
    description: "Solved by using Javascript Async Programming",
    userId: 19,
  },
  {
    id: 20,
    problem: 180,
    description: "Solved by using Javascript Functions",
    userId: 20,
  },
  {
    id: 21,
    problem: 140,
    description: "Solved by using Mysql Introduction",
    userId: 21,
  },
  {
    id: 22,
    problem: 230,
    description: "Solved by using Javascript Promises",
    userId: 22,
  },
  {
    id: 23,
    problem: 190,
    description: "Solved by using React Context API",
    userId: 23,
  },
  {
    id: 24,
    problem: 290,
    description: "Solved by using React Router",
    userId: 24,
  },
  {
    id: 25,
    problem: 220,
    description: "Solved by using Javascript Callback Functions",
    userId: 25,
  },
  {
    id: 26,
    problem: 260,
    description: "Solved by using HTML and CSS",
    userId: 26,
  },
  {
    id: 27,
    problem: 240,
    description: "Solved by using Node JS",
    userId: 27,
  },
  {
    id: 28,
    problem: 280,
    description: "Solved by using React DOM",
    userId: 28,
  },
  {
    id: 29,
    problem: 250,
    description: "Solved by using Javascript Async Programming",
    userId: 29,
  },
  {
    id: 30,
    problem: 270,
    description: "Solved by using MongoDB",
    userId: 30,
  },
]);

// attendence collection

db.createCollection("attendence");

// documents creation

db.attendence.insertMany([
  {
    id: 1,
    attendence: true,
  },
  {
    id: 2,
    attendence: false,
  },
]);
